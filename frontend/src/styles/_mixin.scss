@mixin respond($breakpoint) {
    @if $breakpoint == 1000 {
      @media (max-width: 1000px) {
        @content;
      }
    } @else if $breakpoint == 768 {
      @media (max-width: 768px) {
        @content;
      }
    } @else if $breakpoint == 480 {
      @media (max-width: 480px) {
        @content;
      }
    } @else if $breakpoint == 360 {
      @media (max-width: 360px) {
        @content;
      }
    }
  }
  
  @mixin adaptive-size($property, $px, $viewport) {
    #{$property}: calc(#{$px} / #{$viewport} * 100vw);
  }
  // $px — из макета, например 24
  // $viewport — ширина макета, например 1440
  
  // Пример использования миксина
  // @include adaptive-size(margin-bottom, 32, 1440);
  // @include respond(768) {
  //     flex-direction: column;
  //     gap: 10px;
  //   }
  
  //   @include respond(480) {
  //     padding: 16px;
  //   }
  
  
  @mixin clamp($property, $min, $preferred, $max) {
    #{$property}: clamp(#{$min}, #{$preferred}, #{$max});
  }
  
  // Пример использоваания миксина
  // title {
  //   @include clamp(font-size, 16px, 2vw, 24px);
  // }
  
  // .section-padding {
  //   @include clamp(padding, 20px, 5vw, 60px);
  // }
  
  // $min — минимальное значение (например, 14px)
  // $preferred — адаптивное значение (например, 2vw)
  // $max — максимальное значение (например, 22px)

  @mixin card-adaptive($gap: 20px, $min-width: 210px) {
  display: grid;
  grid-template-columns: repeat(4, minmax(#{$min-width}, 1fr));
  gap: $gap;

  @media (max-width: 1000px) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (max-width: 480px) {
    grid-template-columns: 1fr;
  }
}




